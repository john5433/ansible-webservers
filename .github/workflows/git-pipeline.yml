---
name: Ansible-GitHub actions
on: push
jobs:
  repo_updated:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@master
  install_ansible:
    needs: repo_updated
    runs-on: self-hosted
    steps:
      - name: Installing ansible
        run: |
          sudo apt-get  update -y
          sudo apt install -y ansible
          ansible --version
  install_ansible_lint:
    needs: repo_updated
    runs-on: self-hosted
    steps:
      - name: Installing ansible-lint
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ansible-lint
          ansible-lint --version
  run_ansible_lint:
    needs:
      - install_ansible
      - install_ansible_lint
    runs-on: self-hosted
    steps:
      - name: Linting ansible playbooks
        run: ansible-lint
  install_apache:
    needs: run_ansible_lint
    runs-on: self-hosted
    steps:
      - name: Installing apache
        run: >
          workdir="${GITHUB_WORKSPACE}"

          ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -u ubuntu -i $workdir/host_inventory $workdir/playbooks/apache-install.yml --private-key '/home/ubuntu/.ssh/vm-instance-key.pem'
  website-update:
    needs: install_apache
    runs-on: self-hosted
    steps:
      - name: website updating
        run: >
          workdir="${GITHUB_WORKSPACE}"

          ANSIBLE_HOST_KEY_CHECKING=False export ANSIBLE_ROLES_PATH=$workdir/roles && ansible-playbook -u ubuntu -i $workdir/host_inventory $workdir/playbooks/website-update.yml --private-key '/home/ubuntu/.ssh/vm-instance-key.pem'
  website-test:
    needs: website-update
    runs-on: self-hosted
    steps:
      - name: website testing
        run: >
          workdir="${GITHUB_WORKSPACE}"

          ANSIBLE_HOST_KEY_CHECKING=False export ANSIBLE_ROLES_PATH=$workdir/roles && ansible-playbook -u ubuntu -i $workdir/host_inventory $workdir/playbooks/website-test.yml --private-key '/home/ubuntu/.ssh/vm-instance-key.pem'
    send-notification:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
      - name: Get Slack webhook URL
        run: |
          curl -s https://api.slack.com/apps/C05CE8ZD7PH/webhooks/https://hooks.slack.com/services/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
        env:
          CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Check if all jobs ran
        run: |
          all_jobs_ran=$(jobs -p | wc -l)
      - name: Send Slack notification on success
        if: and(
          always(),
          eq(all_jobs_ran, "${{ steps.all_jobs_ran.outputs.count }}")
         )
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{
            "text": "Pipeline passed!",
            "attachments": [
              {
                "color": "#36393E",
                "title": "Pipeline passed!",
                "text": "The pipeline has passed successfully.",
                "fields": [
                  {
                    "title": "Commit message",
                    "value": "${{ github.event.commits[0].message }}",
                    "short": true
                  }
                ]
              }
            ]
          }' ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send Slack notification on failure
        if: and(
          failure(),
          not(eq(all_jobs_ran, "${{ steps.all_jobs_ran.outputs.count }}"))
         )
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{
            "text": "Pipeline failed!",
            "attachments": [
              {
                "color": "#FF0000",
                "title": "Pipeline failed!",
                "text": "The pipeline has failed.",
                "fields": [
                  {
                    "title": "Commit message",
                    "value": "${{ github.event.commits[0].message }}",
                    "short": true
                  }
                ]
              }
            ]
          }' ${{ secrets.SLACK_WEBHOOK_URL }}
